{
  "Version": "2.2.3",
  "Cards": [
    {
      "Guid": "0dc6f997-6773-4350-b0c6-b454519ab4dc",
      "Name": "Curse",
      "Icon": "icon132.png",
      "Description": "All opponents within 3 get {V} [negative] for {R} turn(s)",
      "BaseMove": 1,
      "Tier": 1,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities1",
            "Value": "{V}",
            "Duration": "{R}",
            "Target": {
              "Type": "others",
              "Direction": "any",
              "Priority": "closest",
              "Amount": "4",
              "Range": {
                "Min": "0",
                "Max": "3"
              }
            },
            "Functions": []
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "R",
              "Value": "1"
            },
            {
              "Key": "V",
              "Value": "-3"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "R",
              "Value": "2"
            },
            {
              "Key": "V",
              "Value": "-3"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "R",
              "Value": "4"
            },
            {
              "Key": "V",
              "Value": "-3"
            }
          ]
        }
      ]
    },
    {
      "Guid": "a2481a29-a4f4-4466-9133-86e1aab09c33",
      "Name": "Stamina Elixir",
      "Icon": "icon273.png",
      "Description": "Gain {M} [positive] for each [negative] on you",
      "BaseMove": 3,
      "Tier": 1,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities5",
            "Value": "{F}",
            "Duration": "1",
            "Target": {
              "Type": "self"
            },
            "Functions": [
              {
                "Key": "F",
                "BodyMultiline": [
                  "negativeTokens = scriptData.GetNegativeTokens()",
                  "count = 0 ",
                  "for key,value in ipairs(negativeTokens) ",
                  "do ",
                  "  count = count + (value.Value * -1) ",
                  "end ",
                  "return count * {M}"
                ]
              }
            ]
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "1"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "4"
            }
          ]
        }
      ]
    },
    {
      "Guid": "a53d188a-ebbc-4199-8284-ad99ab1b7aa6",
      "Name": "Vendor's Pouch",
      "Icon": "icon259.png",
      "Description": "On any Sell, give {A} [basemove] to random player card",
      "BaseMove": 0,
      "Tier": 2,
      "Abilities": {
        "MoveTokenAbilities": [],
        "PrepAbilities": [
          {
            "Name": "sellAbility1",
            "Trigger": "Sell",
            "Effect": "BaseMove",
            "Value": "{A}",
            "Target": {
              "Type": "others",
              "Inventory": "player",
              "Slot": "",
              "Direction": "any",
              "Priority": "random",
              "Amount": "1"
            },
            "Functions": []
          }
        ]
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "1"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "4"
            }
          ]
        }
      ]
    },
    {
      "Guid": "cfb3a58a-8afb-473a-aa12-6a0707db0467",
      "Name": "Robin's Hood",
      "Icon": "icon702.png",
      "Description": "When Sold, give other cards in player inventory {A} [basemove]",
      "BaseMove": 1,
      "Tier": 2,
      "Abilities": {
        "MoveTokenAbilities": [],
        "PrepAbilities": [
          {
            "Name": "soldAbility1",
            "Trigger": "Sold",
            "Effect": "BaseMove",
            "Value": "{A}",
            "Target": {
              "Type": "others",
              "Inventory": "player",
              "Slot": "",
              "Direction": "any",
              "Priority": "closest",
              "Amount": "5"
            },
            "Functions": []
          }
        ]
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "1"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "4"
            }
          ]
        }
      ]
    },
    {
      "Guid": "1ead9156-f736-4557-b0a2-e53dc0fcb78b",
      "Name": "escape rune",
      "Icon": "icon851.png",
      "Description": "For each opponent on your current space, gain {A} [positive]",
      "BaseMove": 1,
      "Tier": 2,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities1",
            "Value": "{F}",
            "Duration": "1",
            "Target": {
              "Type": "self",
              "Direction": "any",
              "Priority": "closest",
              "Amount": "4",
              "Range": {
                "Min": "0",
                "Max": "0"
              }
            },
            "Functions": [
              {
                "Key": "F",
                "BodyMultiline": [
                  "minRange = scriptData.Player.Position ",
                  "maxRange = scriptData.Player.Position ",
                  "playersInRange = scriptData.GetPlayersWithinRange(minRange, maxRange) ",
                  "result = 0 ",
                  "for key,value in ipairs(playersInRange) ",
                  "do ",
                  "  result = result + {A} ",
                  "end ",
                  "return result"
                ]
              }
            ]
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "3"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "4"
            }
          ]
        }
      ]
    },
    {
      "Guid": "29127562-6207-403b-a5ec-3410aa889213",
      "Name": "Charge Boots",
      "Icon": "icon754.png",
      "Description": "Gain {A} [positive] for 2 turns",
      "BaseMove": 0,
      "Tier": 2,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities1",
            "Value": "{A}",
            "Duration": "2",
            "Target": {
              "Type": "self",
              "Direction": "any",
              "Priority": "closest",
              "Amount": "4",
              "Range": {
                "Min": "0",
                "Max": "0"
              }
            },
            "Functions": []
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "4"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "8"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "12"
            }
          ]
        }
      ]
    },
    {
      "Guid": "6620a26e-eb27-4d55-825d-8b85d3f6d88a",
      "Name": "Dragon Plate",
      "Icon": "icon638.png",
      "Description": "If you have no [positive], gain {M} [positive]",
      "BaseMove": 5,
      "Tier": 3,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities5",
            "Value": "{F}",
            "Duration": "1",
            "Target": {
              "Type": "self"
            },
            "Functions": [
              {
                "Key": "F",
                "BodyMultiline": [
                  "positiveTokens = scriptData.GetPositiveTokens()",
                  "count = 0 ",
                  "for key,value in ipairs(positiveTokens) ",
                  "do ",
                  "  count = count + 1 ",
                  "end ",
                  "if (count > 0) then",
                  "  return 0",
                  "else ",
                  "  return {M}",
                  "end "
                ]
              }
            ]
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "5"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "10"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "15"
            }
          ]
        }
      ]
    },
    {
      "Guid": "d6d1ab3c-d788-4712-9b18-b1cc7473e776",
      "Name": "Lasting Shield",
      "Icon": "icon600.png",
      "Description": "Gain {M} [positive] for each [negative] on you for {D} turns",
      "BaseMove": 2,
      "Tier": 2,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities5",
            "Value": "{F}",
            "Duration": "{D}",
            "Target": {
              "Type": "self"
            },
            "Functions": [
              {
                "Key": "F",
                "BodyMultiline": [
                  "negativeTokens = scriptData.GetNegativeTokens()",
                  "count = 0 ",
                  "for key,value in ipairs(negativeTokens) ",
                  "do ",
                  "  count = count + (value.Value * -1) ",
                  "end ",
                  "return count * {M}"
                ]
              }
            ]
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "1"
            },
            {
              "Key": "D",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "1"
            },
            {
              "Key": "D",
              "Value": "4"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "1"
            },
            {
              "Key": "D",
              "Value": "8"
            }
          ]
        }
      ]
    },
    {
      "Guid": "75349081-b1a4-454c-beb9-d9befb92808a",
      "Name": "Blue Spell",
      "Icon": "icon155.png",
      "Description": "Give {D} [negative] equal to the distance between you",
      "BaseMove": 1,
      "Tier": 3,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities1",
            "Value": "{A}",
            "Duration": "1",
            "Target": {
              "Type": "playerId",
              "PlayerId": "{F}"
            },
            "Functions": [
              {
                "Key": "A",
                "BodyMultiline": [
                  "local highestOppenentA = nil",
                  "local otherPlayersA = scriptData.GetOtherPlayers()",
                  "for key,value in ipairs(otherPlayersA) ",
                  "do ",
                  "  if (highestOppenentA == nil) then",
                  "    highestOppenentA = value",
                  "  elseif(value.Position > highestOppenentA.Position) then",
                  "    highestOppenentA = value",
                  "  end ",
                  "end ",
                  "if (highestOppenentA.Position > scriptData.Player.Position) then",
                  "  return scriptData.Player.Position - highestOppenentA.Position",
                  "else",
                  "  return 0",
                  "end "
                ]
              },
              {
                "Key": "F",
                "BodyMultiline": [
                  "local highestOppenentF = nil",
                  "local otherPlayersF = scriptData.GetOtherPlayers()",
                  "for key,value in ipairs(otherPlayersF) ",
                  "do ",
                  "  if (highestOppenentF == nil) then",
                  "    highestOppenentF = value",
                  "  elseif(value.Position > highestOppenentF.Position) then",
                  "    highestOppenentF = value",
                  "  end ",
                  "end ",
                  "if (highestOppenentF ~= nil) then",
                  "  return highestOppenentF.Id",
                  "else",
                  "  return -1",
                  "end "
                ]
              }
            ]
          },
          {
            "Name": "ability2",
            "Type": "Additive",
            "Phase": "Abilities1",
            "Value": "{B}",
            "Duration": "1",
            "Target": {
              "Type": "playerId",
              "PlayerId": "{S}"
            },
            "Functions": [
              {
                "Key": "B",
                "BodyMultiline": [
                  "if ('{L}' == '1') then",
                  "  return 0",
                  "end",
                  "local highestOppenentB = nil",
                  "local secondHighestOppenentB = nil",
                  "local otherPlayersB = scriptData.GetOtherPlayers()",
                  "for key,value in ipairs(otherPlayersB) ",
                  "do ",
                  "  if (highestOppenentB == nil) then",
                  "    highestOppenentB = value",
                  "  elseif(value.Position > highestOppenentB.Position) then",
                  "    secondHighestOppenentB = highestOppenentB",
                  "    highestOppenentB = value",
                  "  elseif(secondHighestOppenentB == nil) then",
                  "    secondHighestOppenentB = value",
                  "  elseif(value.Position > secondHighestOppenentB.Position) then",
                  "    secondHighestOppenentB = value",
                  "  end ",
                  "end ",
                  "if (secondHighestOppenentB.Position > scriptData.Player.Position) then",
                  "  return scriptData.Player.Position - secondHighestOppenentB.Position",
                  "else",
                  "  return 0",
                  "end "
                ]
              },
              {
                "Key": "S",
                "BodyMultiline": [
                  "local highestOppenentS = nil",
                  "local secondHighestOppenentS = nil",
                  "local otherPlayersS = scriptData.GetOtherPlayers()",
                  "for key,value in ipairs(otherPlayersS) ",
                  "do ",
                  "  if (highestOppenentS == nil) then",
                  "    highestOppenentS = value",
                  "  elseif(value.Position > highestOppenentS.Position) then",
                  "    secondHighestOppenentS = highestOppenentS",
                  "    highestOppenentS = value",
                  "  elseif(secondHighestOppenentS == nil) then",
                  "    secondHighestOppenentS = value",
                  "  elseif(value.Position > secondHighestOppenentS.Position) then",
                  "    secondHighestOppenentS = value",
                  "  end ",
                  "end ",
                  "if (secondHighestOppenentS ~= nil) then",
                  "  return secondHighestOppenentS.Id",
                  "else",
                  "  return -1",
                  "end "
                ]
              }
            ]
          },
          {
            "Name": "ability3",
            "Type": "Additive",
            "Phase": "Abilities1",
            "Value": "{C}",
            "Duration": "1",
            "Target": {
              "Type": "playerId",
              "PlayerId": "{T}"
            },
            "Functions": [
              {
                "Key": "C",
                "BodyMultiline": [
                  "if ('{L}' == '1' or '{L}' == '2') then",
                  "  return 0",
                  "end",
                  "local lowestOppenent = nil",
                  "local otherPlayersC = scriptData.GetOtherPlayers()",
                  "for key,value in ipairs(otherPlayersC) ",
                  "do ",
                  "  if (lowestOppenent == nil) then",
                  "    lowestOppenent = value",
                  "  elseif(value.Position <= lowestOppenent.Position) then",
                  "    lowestOppenent = value",
                  "  end ",
                  "end ",
                  "if (lowestOppenent.Position > scriptData.Player.Position) then",
                  "  return scriptData.Player.Position - lowestOppenent.Position",
                  "else",
                  "  return 0",
                  "end "
                ]
              },
              {
                "Key": "T",
                "BodyMultiline": [
                  "local lowestOppenent = nil",
                  "local otherPlayersC = scriptData.GetOtherPlayers()",
                  "for key,value in ipairs(otherPlayersC) ",
                  "do ",
                  "  if (lowestOppenent == nil) then",
                  "    lowestOppenent = value",
                  "  elseif(value.Position <= lowestOppenent.Position) then",
                  "    lowestOppenent = value",
                  "  end ",
                  "end ",
                  "if (lowestOppenent ~= nil) then",
                  "  return lowestOppenent.Id",
                  "else",
                  "  return -1",
                  "end "
                ]
              }
            ]
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "D",
              "Value": "opponent in 1st"
            },
            {
              "Key": "L",
              "Value": "1"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "D",
              "Value": "opponents in 1st and 2nd"
            },
            {
              "Key": "L",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "D",
              "Value": "all opponents ahead"
            },
            {
              "Key": "L",
              "Value": "3"
            }
          ]
        }
      ]
    },
    {
      "Guid": "215a2700-a37f-45a6-82b2-bcd8d8e6d43e",
      "Name": "Kakarot",
      "Icon": "icon310.png",
      "Description": "Gain {V} [positive] for {D} turns",
      "BaseMove": 2,
      "Tier": 1,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities1",
            "Value": "{V}",
            "Duration": "{D}",
            "Target": {
              "Type": "self"
            },
            "Functions": []
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "V",
              "Value": "1"
            },
            {
              "Key": "D",
              "Value": "3"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "V",
              "Value": "1"
            },
            {
              "Key": "D",
              "Value": "6"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "V",
              "Value": "1"
            },
            {
              "Key": "D",
              "Value": "12"
            }
          ]
        }
      ]
    },
    {
      "Guid": "10c63130-1eca-4a25-85f9-cfb16ef040d3",
      "Name": "Abyss Brew",
      "Icon": "icon347.png",
      "Description": "Gain -1 [negative] for {D} turns",
      "BaseMove": 8,
      "Tier": 1,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities1",
            "Value": "-1",
            "Duration": "{D}",
            "Target": {
              "Type": "self"
            },
            "Functions": []
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "D",
              "Value": "6"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "D",
              "Value": "3"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "D",
              "Value": "1"
            }
          ]
        }
      ]
    },
    {
      "Guid": "2c28167c-d4ae-4ca1-9766-47552a9b1f7a",
      "Name": "Crippling Shot",
      "Icon": "icon534.png",
      "Description": "Opponents ahead get {V} [negative] for {D} turns",
      "BaseMove": 2,
      "Tier": 1,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities1",
            "Value": "{V}",
            "Duration": "{D}",
            "Target": {
              "Type": "others",
              "Direction": "Forward",
              "Priority": "PositionDescending",
              "Amount": "4",
              "Range": {
                "Min": "1",
                "Max": "99999"
              }
            },
            "Functions": []
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "V",
              "Value": "-2"
            },
            {
              "Key": "D",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "V",
              "Value": "-3"
            },
            {
              "Key": "D",
              "Value": "3"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "V",
              "Value": "-4"
            },
            {
              "Key": "D",
              "Value": "4"
            }
          ]
        }
      ]
    },
    {
      "Guid": "ef36013f-5ee4-468e-b33e-ad1be780ab5d",
      "Name": "Dream Siphon",
      "Icon": "icon133.png",
      "Description": "Gain {M} [positive] for each of your [negative] on opponents",
      "BaseMove": 2,
      "Tier": 3,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities4",
            "Value": "{F}",
            "Duration": "1",
            "Target": {
              "Type": "self"
            },
            "Functions": [
              {
                "Key": "F",
                "BodyMultiline": [
                  "otherPlayers = scriptData.GetOtherPlayers()",
                  "count = 0 ",
                  "for key,value in ipairs(otherPlayers) ",
                  "do ",
                  "  negativeTokens = scriptData.GetNegativeTokens(value.Id) ",
                  "  for key,value in ipairs(negativeTokens) ",
                  "  do ",
                  "    if (value.CreatedBy == scriptData.Player.Id) then",
                  "      count = count + 1",
                  "    end ",
                  "  end ",
                  "end ",
                  "return count * {M}"
                ]
              }
            ]
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "4"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "8"
            }
          ]
        }
      ]
    },
    {
      "Guid": "f3f4b7d2-1d29-424f-832c-62e02452f587",
      "Name": "Rimshot",
      "Icon": "icon405.png",
      "Description": "Give everyone {N} [negative] and {P} [positive] for {D} turns",
      "BaseMove": 5,
      "Tier": 2,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities1",
            "Value": "{P}",
            "Duration": "{D}",
            "Target": {
              "Type": "all",
              "Direction": "any",
              "Priority": "closest",
              "Amount": "4",
              "Range": {
                "Min": "0",
                "Max": "99999"
              }
            },
            "Functions": []
          },
          {
            "Name": "ability2",
            "Type": "Additive",
            "Phase": "Abilities1",
            "Value": "{N}",
            "Duration": "{D}",
            "Target": {
              "Type": "all",
              "Direction": "any",
              "Priority": "closest",
              "Amount": "4",
              "Range": {
                "Min": "0",
                "Max": "99999"
              }
            },
            "Functions": []
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "N",
              "Value": "-1"
            },
            {
              "Key": "P",
              "Value": "1"
            },
            {
              "Key": "D",
              "Value": "5"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "N",
              "Value": "-3"
            },
            {
              "Key": "P",
              "Value": "3"
            },
            {
              "Key": "D",
              "Value": "5"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "N",
              "Value": "-9"
            },
            {
              "Key": "P",
              "Value": "9"
            },
            {
              "Key": "D",
              "Value": "5"
            }
          ]
        }
      ]
    },
    {
      "Guid": "bea34660-4362-4f34-9733-bc735904a9a6",
      "Name": "Burning Agate",
      "Icon": "icon913.png",
      "Description": "Gain {M} [positive] for each opponent ahead",
      "BaseMove": 5,
      "Tier": 3,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities1",
            "Value": "{F}",
            "Duration": "1",
            "Target": {
              "Type": "self"
            },
            "Functions": [
              {
                "Key": "F",
                "BodyMultiline": [
                  "otherPlayers = scriptData.GetOtherPlayers()",
                  "count = 0 ",
                  "for key,value in ipairs(otherPlayers) ",
                  "do ",
                  "  if (value.Position > scriptData.Player.Position) then",
                  "    count = count + 1",
                  "  end ",
                  "end ",
                  "return count * {M}"
                ]
              }
            ]
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "5"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "10"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "20"
            }
          ]
        }
      ]
    },
    {
      "Guid": "2d6c454a-3b36-4671-b217-08d63750d380",
      "Name": "Leaky Gem",
      "Icon": "icon1006.png",
      "Description": "When sold, give {A} [basemove] to random card",
      "BaseMove": 2,
      "Tier": 1,
      "Abilities": {
        "MoveTokenAbilities": [],
        "PrepAbilities": [
          {
            "Name": "soldAbility1",
            "Trigger": "Sold",
            "Effect": "BaseMove",
            "Value": "{A}",
            "Target": {
              "Type": "others",
              "Inventory": "player",
              "Slot": "",
              "Direction": "any",
              "Priority": "random",
              "Amount": "1"
            },
            "Functions": []
          }
        ]
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "4"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "8"
            }
          ]
        }
      ]
    },
    {
      "Guid": "09b9aeaa-366a-4b65-97b6-812f7941b02a",
      "Name": "Infuser",
      "Icon": "icon995.png",
      "Description": "On buy, give bought card {A} [basemove]",
      "BaseMove": 3,
      "Tier": 1,
      "Abilities": {
        "MoveTokenAbilities": [],
        "PrepAbilities": [
          {
            "Name": "ability1",
            "Trigger": "Buy",
            "Effect": "BaseMove",
            "Value": "{A}",
            "Target": {
              "TriggerCard": "true"
            },
            "Functions": []
          }
        ]
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "1"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "4"
            }
          ]
        }
      ]
    },
    {
      "Guid": "54f9c12b-c4ac-44b0-b48c-3a70161cd132",
      "Name": "Dwarven Reconfigurator",
      "Icon": "icon940.png",
      "Description": "Start of turn, give card to the right {A} [basemove]",
      "BaseMove": 2,
      "Tier": 2,
      "Abilities": {
        "MoveTokenAbilities": [],
        "PrepAbilities": [
          {
            "Name": "ability1",
            "Trigger": "Startturn",
            "Effect": "BaseMove",
            "Value": "{A}",
            "Target": {
              "Type": "others",
              "Inventory": "player",
              "Slot": "",
              "Direction": "forward",
              "Priority": "closest",
              "Amount": "1"
            },
            "Functions": []
          }
        ]
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "1"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "4"
            }
          ]
        }
      ]
    },
    {
      "Guid": "73c8771f-f033-46af-9627-58205fcc71e6",
      "Name": "Jamestown",
      "Icon": "icon021.png",
      "Description": "When Sold, reroll and gain {A} gold",
      "BaseMove": 3,
      "Tier": 2,
      "Abilities": {
        "MoveTokenAbilities": [],
        "PrepAbilities": [
          {
            "Name": "soldAbility1",
            "Trigger": "Sold",
            "Effect": "Reroll"
          },
          {
            "Name": "soldAbility2",
            "Trigger": "Sold",
            "Effect": "Gold",
            "Value": "{A}"
          }
        ]
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "4"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "8"
            }
          ]
        }
      ]
    },
    {
      "Guid": "63ad7436-587b-4d81-b22f-6989c8ec1145",
      "Name": "Snowball",
      "Icon": "icon922_c.png",
      "Description": "Start of turn{D}, gain {A} [basemove]",
      "BaseMove": 1,
      "Tier": 1,
      "Abilities": {
        "MoveTokenAbilities": [],
        "PrepAbilities": [
          {
            "Name": "ability1",
            "Trigger": "Startturn",
            "Effect": "BaseMove",
            "Value": "{F}",
            "Target": {
              "Type": "self",
              "Inventory": "Any"
            },
            "Functions": [
              {
                "Key": "F",
                "BodyMultiline": [
                  "if (scriptData.Card.IsFrozen or '{D}' == '') then",
                  "  return {A}",
                  "else ",
                  "  return 0",
                  "end "
                ]
              }
            ]
          }
        ]
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "2"
            },
            {
              "Key": "D",
              "Value": ", if frozen"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "2"
            },
            {
              "Key": "D",
              "Value": ""
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "4"
            },
            {
              "Key": "D",
              "Value": ""
            }
          ]
        }
      ]
    },
    {
      "Guid": "7dac81b8-35ad-496a-bdfe-1c5d52b09865",
      "Name": "Bag of Hoarding",
      "Icon": "icon359.png",
      "Description": "Start of turn, gain {A}g for each empty inventory slot",
      "BaseMove": 3,
      "Tier": 2,
      "Abilities": {
        "MoveTokenAbilities": [],
        "PrepAbilities": [
          {
            "Name": "ability1",
            "Trigger": "Startturn",
            "Effect": "Gold",
            "Value": "{F}",
            "Target": {
              "Inventory": "Player"
            },
            "Functions": [
              {
                "Key": "F",
                "BodyMultiline": [
                  "playerCards = scriptData.PlayerInventory",
                  "count = 0 ",
                  "for key,value in ipairs(playerCards) ",
                  "do ",
                  "  if (value.Name ~= \"Empty Slot\") then",
                  "    count = count + 1 ",
                  "  end ",
                  "end ",
                  "emptySlots = 5 - count",
                  "return emptySlots * {A}"
                ]
              }
            ]
          }
        ]
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "1"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "4"
            }
          ]
        }
      ]
    },
    {
      "Guid": "e447d44c-1b2d-4d20-aa67-392ff62b7d4e",
      "Name": "Soul Essence",
      "Icon": "icon1019.png",
      "Description": "When Sold, give card to the right {A} exp",
      "BaseMove": 3,
      "Tier": 3,
      "Abilities": {
        "MoveTokenAbilities": [],
        "PrepAbilities": [
          {
            "Name": "soldAbility1",
            "Trigger": "Sold",
            "Effect": "Exp",
            "Value": "{A}",
            "Target": {
              "Type": "others",
              "Inventory": "player",
              "Slot": "",
              "Direction": "forward",
              "Priority": "closest",
              "Amount": "1"
            },
            "Functions": []
          }
        ]
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "1"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "2"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "A",
              "Value": "4"
            }
          ]
        }
      ]
    },
    {
      "Guid": "b2fbba84-f232-4f33-85ab-90158b5e477a",
      "Name": "Focus Ring",
      "Icon": "icon801.png",
      "Description": "Gain {M} [positive] for each of your [positive]{D}",
      "BaseMove": 0,
      "Tier": 3,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities5",
            "Value": "{P}",
            "Duration": "1",
            "Target": {
              "Type": "self"
            },
            "Functions": [
              {
                "Key": "P",
                "BodyMultiline": [
                  "positiveTokens = scriptData.GetPositiveTokens()",
                  "amount = 0 ",
                  "for key,value in ipairs(positiveTokens) ",
                  "do ",
                  "  amount = amount + value.Value ",
                  "end ",
                  "return {M} * amount"
                ]
              }
            ]
          },
          {
            "Name": "ability2",
            "Type": "Additive",
            "Phase": "Abilities5",
            "Value": "{N}",
            "Duration": "1",
            "Target": {
              "Type": "self"
            },
            "Functions": [
              {
                "Key": "N",
                "BodyMultiline": [
                  "negativeTokens = scriptData.GetNegativeTokens()",
                  "amount = 0 ",
                  "for key,value in ipairs(negativeTokens) ",
                  "do ",
                  "  amount = amount + value.Value ",
                  "end ",
                  "if ('{D}' ~= '') then",
                  "  return {M} * amount",
                  "else ",
                  "  return 0",
                  "end "
                ]
              }
            ]
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "1"
            },
            {
              "Key": "D",
              "Value": " and -1 [negative] for each of your [negative]"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "1"
            },
            {
              "Key": "D",
              "Value": ""
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "2"
            },
            {
              "Key": "D",
              "Value": ""
            }
          ]
        }
      ]
    },
    {
      "Guid": "63aa289f-7119-456a-878c-e2758d28758e",
      "Name": "Retribution",
      "Icon": "icon130.png",
      "Description": "Give other players {M} [negative] for each [negative] on you",
      "BaseMove": 3,
      "Tier": 3,
      "Abilities": {
        "MoveTokenAbilities": [
          {
            "Name": "ability1",
            "Type": "Additive",
            "Phase": "Abilities3",
            "Value": "{F}",
            "Duration": "1",
            "Target": {
              "Type": "others",
              "Direction": "any",
              "Priority": "closest",
              "Amount": "4",
              "Range": {
                "Min": "0",
                "Max": "99999"
              }
            },
            "Functions": [
              {
                "Key": "F",
                "BodyMultiline": [
                  "negativeTokens = scriptData.GetNegativeTokens()",
                  "count = 0 ",
                  "for key,value in ipairs(negativeTokens) ",
                  "do ",
                  "  count = count + (value.Value * -1) ",
                  "end ",
                  "return count * {M}"
                ]
              }
            ]
          }
        ],
        "PrepAbilities": []
      },
      "LevelValues": [
        {
          "Id": 1,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "-2"
            }
          ]
        },
        {
          "Id": 2,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "-4"
            }
          ]
        },
        {
          "Id": 3,
          "OutKeys": [
            {
              "Key": "M",
              "Value": "-8"
            }
          ]
        }
      ]
    }
  ]
}